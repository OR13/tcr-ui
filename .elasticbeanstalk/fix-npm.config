# This file is controlled by the `eb-disable-npm` Node module. If you'd like to
# modify it, you either should publish a new version of that module and update
# to that version; or, you should uninstall that module and then edit this file
# --uninstallation won't take the file with it.

# This file prevents Elastic Beanstalk from trying to run `npm install` or
# `npm rebuild` on its EC2 instances. See the README for why.

files:
  "/opt/elasticbeanstalk/env.vars":
    mode: "000775"
    owner: root
    group: users
    content: |
      # Defines variables for use by the other scripts below.

      EB_NODE_VERSION=$(/opt/elasticbeanstalk/bin/get-config optionsettings -n aws:elasticbeanstalk:container:nodejs -o NodeVersion)

      # Exported to make sure Node binaries can be found by npm when we run it.
      # And this lets us invoke npm more simply too.
      export PATH=/opt/elasticbeanstalk/node-install/node-v$EB_NODE_VERSION-linux-x64/bin:$PATH

      # For parity with EB https://gist.github.com/wearhere/de51bb799f5099cec0ed28b9d0eb3663#file-ebnode-py-L147
      # and because some npm packages require HOME. This will also get npm to
      # read its configuration from the proper directory.
      export HOME=$(/opt/elasticbeanstalk/bin/get-config container -k app_user_home)

      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/50npm.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      #
      # Only install modules, don't rebuild like Elastic Beanstalk does by default:
      # https://gist.github.com/wearhere/de51bb799f5099cec0ed28b9d0eb3663.
      # New modules will be built when they are installed, and cached modules don't
      # need to be rebuilt. When the Node version changes, the configdeploy script
      # will rebuild.
      #
      # Note that this *overwrites* Elastic Beanstalk's default 50npm.sh script.
      
      . /opt/elasticbeanstalk/env.vars

      cd $EB_APP_STAGING_DIR && npm install --production

  "/opt/elasticbeanstalk/hooks/configdeploy/pre/50npm.sh":
    mode: "000755"
    owner: root
    group: users
    content: |
      #!/usr/bin/env bash
      #
      # Prevent installing or rebuilding like Elastic Beanstalk tries to do by
      # default.
      #
      # Note that this *overwrites* Elastic Beanstalk's default 50npm.sh script.
      # But their default script actually doesn't work at all, since the app
      # staging dir, where they try to run `npm install`, doesn't exist during
      # config deploys, so ebnode.py just aborts:
      # https://gist.github.com/wearhere/de51bb799f5099cec0ed28b9d0eb3663#file-ebnode-py-L140